# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, List

from pydantic import BaseModel, Extra


class ArtistMap(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    max_mint: str
    tier1_index: str
    tier1_metadata_path: str
    tier1_total_supply: str
    tier2_index: str
    tier2_metadata_path: str
    tier2_total_supply: str
    tier3_index: str
    tier3_metadata_path: str
    tier3_total_supply: str


class JokoContractStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    active: bool
    artist_map: Dict[str, ArtistMap]
    fa2: str
    joko_id: str
    manager: str
    max_per_address: Dict[str, Dict[str, Dict[str, str]]]
    metadata: Dict[str, str]
    pixel_artist_map: Dict[str, str]
    tier2_price: str
    tier2_royalties: Dict[str, str]
    tier3_price: str
    tier3_royalties: Dict[str, str]
    tier_map: Dict[str, Dict[str, List[str]]]
